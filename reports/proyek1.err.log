Traceback (most recent call last):
  File "C:\Users\vania wrenda\AppData\Local\Programs\Python\Python312\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\vania wrenda\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\vania wrenda\AppData\Local\Programs\Python\Python312\Lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\vania wrenda\AppData\Local\Programs\Python\Python312\Lib\asyncio\base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\vania wrenda\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\vania wrenda\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\vania wrenda\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
df['Date'] = pd.to_datetime(df['Date'], dayfirst=True).dt.date
df.set_index('Date', inplace=True)
df.index = pd.to_datetime(df.index)
print(df.head())
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
Cell [1;32mIn[5], line 1[0m
[1;32m----> 1[0m df[[38;5;124m'[39m[38;5;124mDate[39m[38;5;124m'[39m] [38;5;241m=[39m [43mpd[49m[38;5;241;43m.[39;49m[43mto_datetime[49m[43m([49m[43mdf[49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mDate[39;49m[38;5;124;43m'[39;49m[43m][49m[43m,[49m[43m [49m[43mdayfirst[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m[38;5;241m.[39mdt[38;5;241m.[39mdate
[0;32m      2[0m df[38;5;241m.[39mset_index([38;5;124m'[39m[38;5;124mDate[39m[38;5;124m'[39m, inplace[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[0;32m      3[0m df[38;5;241m.[39mindex [38;5;241m=[39m pd[38;5;241m.[39mto_datetime(df[38;5;241m.[39mindex)

File [1;32m~\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\tools\datetimes.py:1067[0m, in [0;36mto_datetime[1;34m(arg, errors, dayfirst, yearfirst, utc, format, exact, unit, infer_datetime_format, origin, cache)[0m
[0;32m   1065[0m         result [38;5;241m=[39m arg[38;5;241m.[39mmap(cache_array)
[0;32m   1066[0m     [38;5;28;01melse[39;00m:
[1;32m-> 1067[0m         values [38;5;241m=[39m [43mconvert_listlike[49m[43m([49m[43marg[49m[38;5;241;43m.[39;49m[43m_values[49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[43m)[49m
[0;32m   1068[0m         result [38;5;241m=[39m arg[38;5;241m.[39m_constructor(values, index[38;5;241m=[39marg[38;5;241m.[39mindex, name[38;5;241m=[39marg[38;5;241m.[39mname)
[0;32m   1069[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(arg, (ABCDataFrame, abc[38;5;241m.[39mMutableMapping)):

File [1;32m~\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\tools\datetimes.py:433[0m, in [0;36m_convert_listlike_datetimes[1;34m(arg, format, name, utc, unit, errors, dayfirst, yearfirst, exact)[0m
[0;32m    431[0m [38;5;66;03m# `format` could be inferred, or user didn't ask for mixed-format parsing.[39;00m
[0;32m    432[0m [38;5;28;01mif[39;00m [38;5;28mformat[39m [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m [38;5;28mformat[39m [38;5;241m!=[39m [38;5;124m"[39m[38;5;124mmixed[39m[38;5;124m"[39m:
[1;32m--> 433[0m     [38;5;28;01mreturn[39;00m [43m_array_strptime_with_fallback[49m[43m([49m[43marg[49m[43m,[49m[43m [49m[43mname[49m[43m,[49m[43m [49m[43mutc[49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[43m,[49m[43m [49m[43mexact[49m[43m,[49m[43m [49m[43merrors[49m[43m)[49m
[0;32m    435[0m result, tz_parsed [38;5;241m=[39m objects_to_datetime64(
[0;32m    436[0m     arg,
[0;32m    437[0m     dayfirst[38;5;241m=[39mdayfirst,
[1;32m   (...)[0m
[0;32m    441[0m     allow_object[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[0;32m    442[0m )
[0;32m    444[0m [38;5;28;01mif[39;00m tz_parsed [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m    445[0m     [38;5;66;03m# We can take a shortcut since the datetime64 numpy array[39;00m
[0;32m    446[0m     [38;5;66;03m# is in UTC[39;00m

File [1;32m~\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\tools\datetimes.py:467[0m, in [0;36m_array_strptime_with_fallback[1;34m(arg, name, utc, fmt, exact, errors)[0m
[0;32m    456[0m [38;5;28;01mdef[39;00m [38;5;21m_array_strptime_with_fallback[39m(
[0;32m    457[0m     arg,
[0;32m    458[0m     name,
[1;32m   (...)[0m
[0;32m    462[0m     errors: [38;5;28mstr[39m,
[0;32m    463[0m ) [38;5;241m-[39m[38;5;241m>[39m Index:
[0;32m    464[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[0;32m    465[0m [38;5;124;03m    Call array_strptime, with fallback behavior depending on 'errors'.[39;00m
[0;32m    466[0m [38;5;124;03m    """[39;00m
[1;32m--> 467[0m     result, tz_out [38;5;241m=[39m [43marray_strptime[49m[43m([49m[43marg[49m[43m,[49m[43m [49m[43mfmt[49m[43m,[49m[43m [49m[43mexact[49m[38;5;241;43m=[39;49m[43mexact[49m[43m,[49m[43m [49m[43merrors[49m[38;5;241;43m=[39;49m[43merrors[49m[43m,[49m[43m [49m[43mutc[49m[38;5;241;43m=[39;49m[43mutc[49m[43m)[49m
[0;32m    468[0m     [38;5;28;01mif[39;00m tz_out [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m    469[0m         unit [38;5;241m=[39m np[38;5;241m.[39mdatetime_data(result[38;5;241m.[39mdtype)[[38;5;241m0[39m]

File [1;32mstrptime.pyx:501[0m, in [0;36mpandas._libs.tslibs.strptime.array_strptime[1;34m()[0m

File [1;32mstrptime.pyx:451[0m, in [0;36mpandas._libs.tslibs.strptime.array_strptime[1;34m()[0m

File [1;32mstrptime.pyx:587[0m, in [0;36mpandas._libs.tslibs.strptime._parse_with_format[1;34m()[0m

[1;31mValueError[0m: unconverted data remains when parsing with format "%Y-%d-%m": "3", at position 12. You might want to try:
    - passing `format` if your strings have a consistent format;
    - passing `format='ISO8601'` if your strings are all ISO8601 but not necessarily in exactly the same format;
    - passing `format='mixed'`, and the format will be inferred for each element individually. You might want to use `dayfirst` alongside this.

